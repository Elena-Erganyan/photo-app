{"version":3,"sources":["assets/images/preloader.svg","serviceWorker.js","api/api.js","redux/photos-reducer.js","redux/store.js","components/Footer/Footer.jsx","components/Gallery/Photo/Photo.jsx","components/Gallery/Photo/PhotoContainer.jsx","components/Gallery/Gallery.jsx","components/common/Preloader/Preloader.jsx","components/Gallery/GalleryContainer.jsx","components/Modal/Comments/Comment/Comment.jsx","components/Modal/Comments/Comments.jsx","components/Modal/CommentsForm/CommentsForm.jsx","components/Modal/Modal.jsx","components/Modal/ModalContainer.jsx","App.js","AppContainer.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","create","baseURL","photosAPI","get","photoId","name","comment","post","initialState","photos","photoData","isModalActive","isFetching","setComment","commentId","text","date","userName","type","payload","toggleIsModalActive","toggleIsFetching","photosReducer","state","action","comments","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Footer","className","Photo","props","onClick","requestPhotoData","src","photoUrl","alt","id","connect","dispatch","a","response","status","data","alert","statusText","Gallery","gallery","map","item","key","url","Preloader","preloader","requestPhotos","useEffect","Comment","timestamp","result","Date","toLocaleDateString","year","month","day","replace","Comments","CommentsForm","useForm","register","handleSubmit","errors","onSubmit","e","length","lastComment","lastCommentId","postComment","now","target","reset","placeholder","ref","required","Modal","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1f636ecb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.55df549a.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://boiling-refuge-66454.herokuapp.com/images/\"\r\n});\r\n\r\nexport const photosAPI = {\r\n    getPhotos() {\r\n        return instance.get();\r\n    },\r\n    getPhotoData(photoId) {\r\n        return instance.get(`${photoId}`);\r\n    },\r\n    setComment(photoId, name, comment) {\r\n        return instance.post(`${photoId}/comments`, { name, comment });\r\n    }\r\n};","import { photosAPI } from \"../api/api\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    photos: [],\r\n    photoData: {},\r\n    isModalActive: false,\r\n    isFetching: false\r\n}\r\n\r\nconst SET_PHOTOS = \"SET_PHOTOS\";\r\nconst SET_PHOTO_DATA = \"SET_PHOTO_DATA\";\r\nconst SET_COMMENT = \"SET_COMMENT\";\r\nconst TOGGLE_IS_MODAL_ACTIVE = \"TOGGLE_IS_MODAL_ACTIVE\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\n\r\n\r\nconst photosReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_PHOTOS:\r\n            return {\r\n                ...state,\r\n                photos: [...action.photos]\r\n            };\r\n        case SET_PHOTO_DATA:\r\n            return {\r\n                ...state,\r\n                photoData: { ...action.photoData }\r\n            };\r\n        case SET_COMMENT:\r\n            return {\r\n                ...state,\r\n                photoData: {\r\n                    ...state.photoData,\r\n                    comments: [...state.photoData.comments, { ...action.payload }]\r\n                }\r\n            };\r\n        case TOGGLE_IS_MODAL_ACTIVE:\r\n            return {\r\n                ...state,\r\n                isModalActive: action.isModalActive\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setPhotos = (photos) => ({ type: SET_PHOTOS, photos });\r\n\r\nexport const setPhotoData = (photoData) => ({ type: SET_PHOTO_DATA, photoData });\r\n\r\nexport const setComment = (commentId, text, date, userName) => ({\r\n    type: SET_COMMENT,\r\n    payload: {\r\n        \"id\": commentId,\r\n        \"text\": text,\r\n        \"date\": date,\r\n        \"userName\": userName\r\n    }\r\n});\r\n\r\nexport const toggleIsModalActive = (isModalActive) => ({ type: TOGGLE_IS_MODAL_ACTIVE, isModalActive });\r\n\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\n\r\nexport const requestPhotos = () => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        const response = await photosAPI.getPhotos();\r\n\r\n        if (response.status === 200) {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setPhotos(response.data));\r\n        } else {\r\n            alert(`Some error ocurred: ${response.status}: ${response.statusText}`);\r\n        }\r\n    };\r\n};\r\n\r\nexport const requestPhotoData = (photoId) => {\r\n    return async (dispatch) => {\r\n\r\n        const response = await photosAPI.getPhotoData(photoId);\r\n\r\n        if (response.status === 200) {\r\n            dispatch(setPhotoData(response.data));\r\n            dispatch(toggleIsModalActive(true));\r\n        } else {\r\n            alert(`Some error ocurred: ${response.status}: ${response.statusText}`);\r\n        }\r\n    };\r\n};\r\n\r\nexport const postComment = (photoId, userName, text, commentId, date) => {\r\n    return async (dispatch) => {\r\n\r\n        const response = await photosAPI.setComment(photoId, userName, text, commentId, date);\r\n\r\n        if (response.status === 204) {\r\n            dispatch(setComment(commentId, text, date, userName));\r\n        } else {\r\n            alert(`Some error ocurred: ${response.status}: ${response.statusText}`);\r\n        }\r\n    };\r\n};\r\n\r\nexport default photosReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport photosReducer from \"./photos-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(photosReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from \"react\";\r\nimport \"./Footer.scss\";\r\n\r\n\r\n\r\nconst Footer = () => {\r\n    return <footer className=\"footer\">\r\n        <div className=\"footer__text\">&copy; 2020</div>\r\n    </footer>\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"./Photo.scss\";\r\n\r\n\r\n\r\nconst Photo = (props) => {\r\n\r\n    const onPhotoClick = () => {\r\n        props.requestPhotoData(props.photoId);\r\n    };\r\n\r\n    return <div className=\"gallery__item\">\r\n        <img className=\"gallery__photo\" onClick={onPhotoClick} src={props.photoUrl} alt={`photo_${props.id}`} />\r\n    </div>\r\n};\r\n\r\nexport default Photo;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Photo from \"./Photo\";\r\nimport { requestPhotoData } from \"../../../redux/photos-reducer\";\r\n\r\n\r\n\r\nconst PhotoContainer = (props) => {\r\n\r\n    return <Photo photoId={props.id} photoUrl={props.photoUrl} requestPhotoData={props.requestPhotoData} />\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        requestPhotoData: (photoId) => {\r\n            dispatch(requestPhotoData(photoId));\r\n        }\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(PhotoContainer);","import React from \"react\";\r\nimport \"./Gallery.scss\";\r\nimport PhotoContainer from \"./Photo/PhotoContainer\";\r\n\r\n\r\n\r\nconst Gallery = (props) => {\r\n\r\n    const gallery = props.photos.map((item) => <PhotoContainer key={item.id} photoUrl={item.url} id={item.id} isModalActive={props.isModalActive} />);\r\n\r\n    return <div className=\"gallery\">{gallery}</div>\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\"\r\n\r\n\r\nconst Preloader = () => {\r\n    return <div className=\"preloader\">\r\n        <img src={preloader} alt=\"Loading...\" />\r\n    </div>\r\n};\r\n\r\nexport default Preloader;","import React, { useEffect } from \"react\";\r\nimport Gallery from \"./Gallery\";\r\nimport { connect } from \"react-redux\";\r\nimport { requestPhotos } from \"../../redux/photos-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\n\r\nconst GalleryContainer = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.requestPhotos();\r\n    }, []);\r\n\r\n    return <>\r\n        {props.isFetching ? <Preloader /> : null}\r\n        <Gallery photos={props.photos} isModalActive={props.isModalActive} />\r\n    </>\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        photos: state.photos,\r\n        isFetching: state.isFetching\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        requestPhotos: () => {\r\n            dispatch(requestPhotos());\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GalleryContainer);\r\n","import React from \"react\";\r\nimport \"./Comment.scss\";\r\n\r\n\r\n\r\nconst Comment = (props) => {\r\n\r\n    const timestamp = props.date;\r\n    const date = new Date(timestamp);\r\n    const options = {\r\n        year: \"numeric\",\r\n        month: \"numeric\",\r\n        day: \"numeric\"\r\n    };\r\n    const result = date.toLocaleDateString(\"en-GB\", options).replace(/\\//g, \".\");\r\n\r\n    return <div className=\"comment\">\r\n        <div className=\"comment__date\">\r\n            {result}\r\n        </div>\r\n        {props.userName && <div className=\"comment__userName\">\r\n            {props.userName}\r\n        </div>}\r\n        <div className=\"comment__text\">\r\n            {props.text}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Comment;","import React from \"react\";\r\nimport Comment from \"./Comment/Comment\";\r\nimport \"./Comments.scss\";\r\n\r\n\r\n\r\nconst Comments = (props) => {\r\n\r\n    const comments = props.comments.map((item) =>\r\n        <Comment key={item.id} text={item.text} date={item.date} userName={item.userName} />\r\n    );\r\n\r\n    return <div className=\"comments\">{comments}</div>\r\n};\r\n\r\nexport default Comments;","import React from \"react\";\r\nimport \"./CommentsForm.scss\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\n\r\nconst CommentsForm = (props) => {\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = (data, e) => {\r\n\r\n        let commentId;\r\n\r\n        if (props.comments.length) {\r\n            let lastComment = props.comments.length - 1;\r\n            let lastCommentId = props.comments[lastComment][\"id\"];\r\n            commentId = ++lastCommentId;\r\n        } else {\r\n            commentId = 1;\r\n        }\r\n\r\n        props.postComment(props.photoId, data.name, data.comment, commentId, Date.now());\r\n        e.target.reset();\r\n    };\r\n\r\n    return <form onSubmit={handleSubmit(onSubmit)} className=\"commentsForm\">\r\n        <input className=\"commentsForm__name\" name=\"name\" placeholder=\"Your name\" ref={register({ required: true })} />\r\n        {errors.name && <div className=\"error\">The name is required</div>}\r\n        <input className=\"commentsForm__comment\" name=\"comment\" placeholder=\"Your comment\" ref={register({ required: true })} />\r\n        {errors.comment && <div className=\"error\">The comment is required</div>}\r\n        <button className=\"commentsForm__btn btn\" type=\"submit\">Leave your comment</button>\r\n    </form>\r\n};\r\n\r\nexport default CommentsForm;","import React from \"react\";\r\nimport \"./Modal.scss\";\r\nimport Comments from \"./Comments/Comments\";\r\nimport CommentsForm from \"./CommentsForm/CommentsForm\";\r\n\r\n\r\n\r\nconst Modal = (props) => {\r\n\r\n    const onCloseClick = () => {\r\n        props.toggleIsModalActive(false);\r\n    }\r\n\r\n    return <div className=\"overlay\">\r\n        <div className=\"modal\">\r\n            <div className=\"modal__wrapper\">\r\n                <img className=\"modal__photo\" src={props.photoData.url} alt={`photo_${props.photoData.id}`} />\r\n                <button className=\"closeBtn\" onClick={onCloseClick}>Close</button>\r\n\r\n                {props.photoData.comments.length > 0 ? <Comments comments={props.photoData.comments} /> :\r\n                    <div className=\"comments\">No comments yet...</div>}\r\n                <CommentsForm postComment={props.postComment} photoId={props.photoData.id} comments={props.photoData.comments} />\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Modal;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"./Modal\";\r\nimport { toggleIsModalActive, postComment } from \"../../redux/photos-reducer\";\r\n\r\n\r\n\r\nconst ModalContainer = (props) => {\r\n\r\n    return <Modal toggleIsModalActive={props.toggleIsModalActive} photoData={props.photoData} postComment={props.postComment} /*setComment={props.setComment}*/ />\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        photoData: state.photoData\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleIsModalActive: (isModalActive) => {\r\n            dispatch(toggleIsModalActive(isModalActive))\r\n        },\r\n        postComment: (photoId, commentId, text, date, userName) => {\r\n            dispatch(postComment(photoId, commentId, text, date, userName));\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalContainer);","import React from 'react';\nimport './App.scss';\nimport Footer from './components/Footer/Footer';\nimport GalleryContainer from './components/Gallery/GalleryContainer';\nimport ModalContainer from './components/Modal/ModalContainer';\n\n\n\nconst App = (props) => {\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h1>Photo App</h1>\n        <GalleryContainer isModalActive={props.isModalActive} />\n      </div>\n      <Footer />\n      {props.isModalActive && <ModalContainer />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport App from './App';\n\n\n\nconst AppContainer = (props) => {\n  return <App isModalActive={props.isModalActive} />\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isModalActive: state.isModalActive\n  };\n};\n\nexport default connect(mapStateToProps)(AppContainer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport AppContainer from './AppContainer';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}